---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: "{{ include "crunchy-userinit.fullname" . }}-role-cluster"
rules:
  # Framework: knowing which other operators are running (i.e. peering).
  - apiGroups: [kopf.dev]
    resources: [clusterkopfpeerings]
    verbs: [list, watch, patch, get]

  # Framework: runtime observation of namespaces & CRDs (addition/deletion).
  - apiGroups: [apiextensions.k8s.io]
    resources: [customresourcedefinitions]
    verbs: [list, watch]
  - apiGroups: [""]
    resources: [namespaces]
    verbs: [list, watch]

  # Framework: admission webhook configuration management.
  - apiGroups:
      [admissionregistration.k8s.io/v1, admissionregistration.k8s.io/v1beta1]
    resources: [validatingwebhookconfigurations, mutatingwebhookconfigurations]
    verbs: [create, patch]

  # Application: read-only access for watching cluster-wide.
  - apiGroups: [kopf.dev]
    resources: [kopfexamples]
    verbs: [list, watch]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: "{{ include "crunchy-userinit.fullname" . }}-role-namespaced"
  namespace: "{{ .Release.Namespace }}"
rules:
  # Framework: knowing which other operators are running (i.e. peering).
  - apiGroups: [kopf.dev]
    resources: [kopfpeerings]
    verbs: [list, watch, patch, get]

  # Framework: posting the events about the handlers progress/errors.
  - apiGroups: [""]
    resources: [events]
    verbs: [create]

  # Application: Our raison d'etre
  # We need update/patch to store our state of having seen the secret or not
  - apiGroups: [""]
    resources: [secrets]
    verbs: [get, list, watch, update, patch]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: "{{ include "crunchy-userinit.fullname" . }}-rolebinding-cluster"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: "{{ include "crunchy-userinit.fullname" . }}-role-cluster"
subjects:
  - kind: ServiceAccount
    name: "{{include "crunchy-userinit.serviceAccountName" .}}"
    namespace: "{{ .Release.Namespace }}"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  namespace: "{{ .Release.Namespace }}"
  name: "{{ include "crunchy-userinit.fullname" . }}-rolebinding-namespaced"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: "{{ include "crunchy-userinit.fullname" . }}-role-namespaced"
subjects:
  - kind: ServiceAccount
    name: "{{include "crunchy-userinit.serviceAccountName" .}}"
